@using QCUniversidad.Api.Shared.Enums
@using QCUniversidad.Api.Shared.Extensions
@model TeachersViewModel

<div class="fadeIn">
    <div class="d-flex justify-content-between mt-2 mb-2">
        <h5>Listado de profesores del departamento</h5>
        <div>
            <button class="btn btn-sm btn-info" onclick="LoadTeachers()"><span class="fa fa-refresh"></span></button>
        </div>
    </div>

    @if (Model.DepartmentsTeacher?.Any() == true)
    {
        <div class="table-responsive">
            <table class="table table-hover" id="teachersload-table">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Carné de identidad</th>
                        <th>Categoría</th>
                        <th>Disciplinas</th>
                        <th>Carga</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var teacher in Model.DepartmentsTeacher)
                    {
                        <tr>
                            <td>
                                @teacher.Fullname
                            </td>
                            <td>
                                @teacher.PersonalId
                            </td>
                            <td>
                                @Html.DisplayFor(m => teacher.Category)
                            </td>
                            <td>
                                @if (teacher.Disciplines?.Any() == true)
                                {
                                    <span class="badge bg-info" data-bs-toggle="tooltip" data-bs-html="true" title="<div><small><span class='fa fa-info-circle'></span> Disciplinas</small></div> @string.Join("", teacher.Disciplines?.Select(d => $"<div>{d.Name}</div>").ToArray())">
                                        @teacher.Disciplines?.Count
                                        <span class="fa fa-info-circle"></span>
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Sin disciplina</span>
                                }
                            </td>
                            <td align="right">
                                @if (teacher.Load is not null)
                                {
                                    <div class="d-flex align-items-center justify-content-end">
                                        <div class="font-heavy" style='margin-right: 5px;'>
                                            <span>@(teacher.Load.Load) h</span>
                                            <span class="text-muted d-none d-lg-inline">/ @(teacher.Load.TimeFund) h</span>
                                        </div>
                                        @{
                                            var indicatorTooltip = $"<div><small><span class='fa fa-chart-pie'></span> Carga del profesor</small></div> <div><b>{teacher.Load.Status.GetEnumDisplayNameValue()}</b></div> <div>{teacher.Load.Status.GetEnumDisplayDescriptionValue()}</div>";
                                        }
                                        <partial name="_CircleIndicator" model="(teacher.Load.LoadPercent, 30, indicatorTooltip)" />
                                    </div>
                                }
                            </td>
                            <td>
                                <button type="button" class="btn btn-sm btn-info" onclick="OpenTeacherLoadDeatils('@teacher.Id')"><span class="fa fa-truck-loading"></span></button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Load modal -->
        <div class="modal fade" id="teacherLoadDetailsModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="teacherLoadDetailsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="teacherLoadDetailsModalLabel">Carga del profesor</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="LoadTeachers()"></button>
                    </div>
                    <div class="modal-body" id="teacherLoadDetailsModal-content">
                        <div class="d-flex justify-content-center align-content-center">
                            <div class="spinner-grow text-secondary" role="status">
                                <span class="visually-hidden">Cargando...</span>
                            </div>
                            <p>Cargando elementos de carga del profesor</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="LoadTeachers()"><span class="fa fa-rectangle-xmark"></span> Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <h5>No existen profesores en el departamento.</h5>
    }

    @if (Model.SupportTeachers?.Any() == true)
    {
        <hr />
        <h5>Profesores de apoyo al departamento</h5>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Carné de identidad</th>
                        <th>Categoría</th>
                        <th>Departamento</th>
                        <th>Disciplinas</th>
                        <th>Carga</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var teacher in Model.SupportTeachers)
                    {
                        <tr>
                            <td>
                                @teacher.Fullname
                            </td>
                            <td>
                                @teacher.PersonalId
                            </td>
                            <td>
                                @Html.DisplayFor(m => teacher.Category)
                            </td>
                            <td>
                                @teacher.Department?.Name
                            </td>
                            <td>
                                @if (teacher.Disciplines?.Any() == true)
                                {
                                    <span class="badge bg-info">@teacher.Disciplines?.Count <span class="fa fa-info-circle"></span></span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Sin disciplina</span>
                                }
                            </td>
                            <td>
                                @if (teacher.Load is not null)
                                {
                                    <div class="d-flex align-items-center">
                                        <div style='margin-right: 3px;'>
                                            <b>@(teacher.Load.Load) h</b>
                                        </div>
                                        <partial name="_CircleIndicator" model="(teacher.Load.LoadPercent, 30)" />
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>