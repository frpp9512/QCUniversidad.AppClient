@model IList<LoadViewItemModel>
@using QCUniversidad.Api.Shared.Enums;
@using QCUniversidad.Api.Shared.Extensions
@{
    var teachingLoad = Model.Where(item => item.Type == QCUniversidad.Api.Shared.Enums.LoadViewItemType.Teaching);
    var nonTeachingLoad = Model.Where(item => item.Type == QCUniversidad.Api.Shared.Enums.LoadViewItemType.NonTeaching).OrderBy(item => item.Name);
}

<div class="load-list">
    <div class="load-list-divider">
        <div class="list-divider-title">Carga directa (@(teachingLoad.Count()) elementos, @(Math.Round(teachingLoad.Sum(l => l.Value)))h)</div>
        <div class="list-divider-collapser" collapses="teachingload"><button class="list-collapser"><span class="fa fa-chevron-up"></span></button></div>
    </div>
    <div class="load-section" id="teachingload">
        @foreach (var item in teachingLoad)
        {
            <div class="load-info">
                <div class="load-type">
                    @NonTeachingLoadType.ClassPreparation.GetNonTeachingLoadCategoryPromtName()
                    <span class="fa fa-info-circle" style="margin-left: 3px;" data-bs-toggle="tooltip" data-bs-html="true" title="<div><small><span class='fa fa-info-circle'></span> Proceso clave</small></div> <div><b>@NonTeachingLoadType.ClassPreparation.GetNonTeachingLoadCategoryPromtName()</b></div> <div>@NonTeachingLoadType.ClassPreparation.GetNonTeachingLoadCategoryDescription()</div>"></span>
                </div>
                <div class="load-name">
                    @item.Name
                    @if (item.Autogenerated)
                    {
                        <small><span class="fa fa-calculator" data-bs-toggle="tooltip" data-bs-html="true" title="<div><small><span class='fa fa-info-circle'></span> Autocalculado</small></div> <div><b>Campo autocalculado</b></div> <div>Este valor es obtenido automáticamente en función de parámetros de funcionamiento del sistema.</div>"></span></small>
                    }
                </div>
                <div class="load-description">@item.Description</div>
                <div class="load-content">
                    <span>@item.Value</span>
                </div>
            </div>
        }
        <div class="load-info-total">
            <div class="load-total-name">Total de carga directa</div>
            <div class="load-content">
                <span>@teachingLoad.Sum(l => l.Value)</span>
            </div>
        </div>
    </div>
    <div class="load-list-divider">
        <div class="list-divider-title">Carga indirecta (@(nonTeachingLoad.Count(l => l.Status == QCUniversidad.Api.Shared.Enums.LoadViewItemStatus.Setted)) elementos, @(Math.Round(nonTeachingLoad.Sum(i => i.Value)))h)</div>
        <div class="list-divider-collapser" collapses="nonteachingload"><button class="list-collapser"><span class="fa fa-chevron-up"></span></button></div>
    </div>
    <div class="load-section" id="nonteachingload">
        @foreach (var item in nonTeachingLoad)
        {
            <div class="load-info">
                <div class="load-type">
                    @item.NonTeachingLoadType?.GetNonTeachingLoadCategoryPromtName()
                    <span class="fa fa-info-circle" style="margin-left: 3px;" data-bs-toggle="tooltip" data-bs-html="true" title="<div><small><span class='fa fa-info-circle'></span> Proceso clave</small></div> <div><b>@item.NonTeachingLoadType?.GetNonTeachingLoadCategoryPromtName()</b></div> <div>@item.NonTeachingLoadType?.GetNonTeachingLoadCategoryDescription()</div>"></span>
                </div>
                <div class="load-name">@item.Name</div>
                <div class="load-description">@item.Description</div>
                <div class="load-content">
                    @if (item.Status == QCUniversidad.Api.Shared.Enums.LoadViewItemStatus.Setted)
                    {
                        @if (!item.NonTeachingLoadType.Value.GetEnumDisplayAutogenerateValue() && item.AllowRecalculation)
                        {
                            <div style="margin-right: 0.5rem;">
                                <button class="btn btn-sm btn-outline-light" onclick="AddNonTeachingLoad('@item.NonTeachingLoadType.Value.ToString()', '@item.TeacherId')">
                                    <small>
                                        <span class="fa fa-refresh"></span>
                                    </small>
                                </button>
                            </div>
                        }
                        <span>@item.Value</span>
                    }
                    else
                    {
                        <button class="qcbtn" onclick="AddNonTeachingLoad('@item.NonTeachingLoadType.Value.ToString()', '@item.TeacherId')"><span class="fa fa-plus-square"></span> Agregar</button>
                    }
                </div>
            </div>
        }
        <div class="load-info-total">
            <div class="load-total-name">Total de carga indirecta</div>
            <div class="load-content">
                <span>@Math.Round(nonTeachingLoad.Sum(i => i.Value))</span>
            </div>
        </div>
    </div>
    <div class="load-info-maintotal">
        <div class="load-maintotal-name">Total de carga global</div>
        <div class="load-maintotal-content">
            <span>@(Math.Round(teachingLoad.Sum(i => i.Value) + nonTeachingLoad.Sum(i => i.Value)))</span>
        </div>
    </div>
</div>