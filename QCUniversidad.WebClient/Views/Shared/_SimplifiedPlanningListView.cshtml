@using QCUniversidad.Api.Shared.Enums
@using System.Globalization;
@model IList<TeachingPlanItemModel>

@{
    var types = Model.Select(tp => tp.Type).Distinct();
}

<div class="d-flex align-content-center align-items-center justify-content-between mt-2">
    <div>
        <h5>Planificación del período para el departamento</h5>
    </div>
    <div style="display: flex; flex-direction: row; align-items: center; justify-content: end;">
        <button class="btn btn-sm btn-info" onclick="LoadPlanningItems()">
            <span class="fa fa-refresh"></span>
        </button>
    </div>
</div>

@if (Model.Count > 0)
{
    <ul class="nav nav-tabs" id="planning-views" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="grid-tab" data-bs-toggle="tab" data-bs-target="#grid" type="button" role="tab" aria-controls="grid" aria-selected="true"><span class="fa fa-grip"></span></button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="table-tab" data-bs-toggle="tab" data-bs-target="#table" type="button" role="tab" aria-controls="table" aria-selected="false"><span class="fa fa-table"></span></button>
        </li>
    </ul>
    <div class="tab-content" id="planning-views-content">
        <div class="tab-pane fade show active pt-2" id="grid" role="tabpanel" aria-labelledby="grid-tab">
            <!--Grid-->
            <div class="load-items-set">
                @foreach (var item in Model)
                {
                    var itemIndex = Model.IndexOf(item);
                    <partial name="_LoadItem" model="(item, itemIndex)" />
                }
            </div>
        </div>
        <div class="tab-pane fade pt-2" id="table" role="tabpanel" aria-labelledby="table-tab">
            <!--Table-->
            <div class="table-responsive">
                <table class="table table-hover" id="planning-table">
                    <thead>
                        <tr>
                            <th>
                                Curso
                            </th>
                            <th>
                                Asignatura
                            </th>
                            <th>
                                Tipo
                            </th>
                            <td align="right">
                                <b>Horas planificadas</b>
                            </td>
                            <td align="right">
                                <b>Horas cubiertas</b>
                            </td>
                            <td align="center">
                            </td>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-planitemrow-subject="@string.Join("", item.SubjectId.ToString().Split("-"))">
                                <td>
                                    <a asp-action="Details" asp-controller="Courses" asp-route-id="@item.Course?.Id" class="link-info">@item.Course?.Denomination</a>
                                </td>
                                <td>
                                    <a asp-action="Details" asp-controller="Subjects" asp-route-id="@item.Subject?.Id" class="link-info" data-bs-toggle="tooltip" data-bs-html="true" title="<div><small><span class='fa fa-info-circle'></span> Asignatura</small></div> <div><b>@item.Subject?.Name</b></div> <div><i>@item.Subject?.Description</i></div>">
                                        @item.Subject?.Name <small><span class="fa fa-info-circle"></span></small>
                                    </a>
                                </td>
                                <td>
                                    @Html.DisplayFor(m => item.Type)
                                </td>
                                <td align="right">
                                    @if (item.FromPostgraduateCourse == true)
                                    {
                                        <small>
                                            <span class="fa fa-user-graduate" data-bs-toggle="tooltip" data-bs-html="true" title="<div><small><span class='fa fa-info-circle'></span> Postgrado</small></div> <div><b>Es curso de postgrado</b></div> <div><i>Este elemento pertenece a un curso de postgrado y se le aplicará el coefeiciente de cálculo correspondiente.</i></div>"></span>
                                        </small>
                                    }
                                    @item.TotalHoursPlanned
                                </td>
                                <td align="right">
                                    @item.TotalLoadCovered
                                </td>
                                <td align="center">
                                    <svg data-value="@item.LoadCoveredPercent" class="circle-percentage" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none" data-bs-toggle="tooltip" data-bs-html="true" title="<div><small><span class='fa fa-chart-pie'></span> Gráfico</small></div> <div><b>Carga distribuida</b></div> <div>Representa el porciento de carga distribuida.</div>">
                                        <circle r="45" cx="50" cy="50" />
                                        <path class="meter" d="M5,50a45,45 0 1,0 90,0a45,45 0 1,0 -90,0" stroke-linecap="round" stroke-linejoin="round" stroke-dashoffset="282.78302001953125" stroke-dasharray="282.78302001953125" />
                                        <text x="50" y="50" text-anchor="middle" dominant-baseline="central" font-size="2.6rem"></text>
                                    </svg>
                                </td>
                                <td align="right">
                                    <button class="btn btn-sm btn-outline-success" onclick="RiseAddLoadModal('@item.Id', '@item.Subject?.DisciplineId')"><span class="fa fa-user-plus"></span></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!--Summary-->

    <div class="accordion mt-3" id="planningSummary">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Resumen por asignaturas
                </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#planningSummary">
                <div class="accordion-body">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Asignatura</th>
                                <th align="right">Horas planificadas</th>
                                <th align="right">Horas cubiertas</th>
                                <th align="right">Porciento</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var subject in Model.Select(item => item.Subject).Distinct())
                            {
                                var planned = @Model.Sum(i => i.SubjectId == subject?.Id ? i.TotalHoursPlanned : 0);
                                var covered = @Model.Where(i => i.SubjectId == subject?.Id).Sum(i => i.LoadItems.Sum(li => li.HoursCovered));
                                var percent = Math.Round(covered / planned * 100, 2);
                                
                                <tr>
                                    <td>
                                        @subject?.Name
                                    </td>
                                    <td align="right">
                                        @planned.ToString("F", CultureInfo.InvariantCulture)
                                    </td>
                                    <td align="right">
                                        @covered.ToString("F", CultureInfo.InvariantCulture)
                                    </td>
                                    <td align="right">
                                        @percent.ToString("F", CultureInfo.InvariantCulture)
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                @{
                                    var totalPlanned = Model.Sum(i => i.TotalHoursPlanned);
                                    var totalCovered = Model.Sum(i => i.LoadItems.Sum(li => li.HoursCovered));
                                    var totalPercent = totalCovered / totalPlanned * 100;
                                }
                                <td>Total</td>
                                <td align="right">@totalPlanned.ToString("F", CultureInfo.InvariantCulture)</td>
                                <td align="right">@totalCovered.ToString("F", CultureInfo.InvariantCulture)</td>
                                <td align="right">@totalPercent.ToString("F", CultureInfo.InvariantCulture)</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        <div class="accordion-item">
            <h2 class="accordion-header" id="headingTwo">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    Resumen por tipo de actividad
                </button>
            </h2>
            <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#planningSummary">
                <div class="accordion-body">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Actividad</th>
                                <th align="right">Horas planificadas</th>
                                <th align="right">Horas cubiertas</th>
                                <th align="right">Porciento</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var type in types)
                            {
                                var typeHoursPlanned = Model.Where(i => i.Type == type).Sum(i => i.TotalHoursPlanned);
                                var typeHoursCovered = Model.Where(i => i.Type == type).Sum(i => i.LoadItems.Sum(li => li.HoursCovered));
                                var typePercent = Math.Round(typeHoursCovered / typeHoursPlanned * 100, 2);
                                <tr>
                                    <td>@Html.DisplayFor(m => type)</td>
                                    <td align="right">@typeHoursPlanned.ToString("F", CultureInfo.InvariantCulture)</td>
                                    <td align="right">@typeHoursCovered.ToString("F", CultureInfo.InvariantCulture)</td>
                                    <td align="right">@typePercent.ToString("F", CultureInfo.InvariantCulture)</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td>Total</td>
                                <td align="right">@totalPlanned.ToString("F", CultureInfo.InvariantCulture)</td>
                                <td align="right">@totalCovered.ToString("F", CultureInfo.InvariantCulture)</td>
                                <td align="right">@totalPercent.ToString("F", CultureInfo.InvariantCulture)</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <partial name="_NoItems" model="@("No se ha realizado planificación para el semestre seleccionado.")" />
}