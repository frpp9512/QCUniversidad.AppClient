@model CreateCourseModel
@using QCUniversidad.Api.Shared.Enums;
@{
    ViewData["Title"] = "Crear curso";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-12 col-sm-10 col-md-8 col-xl-6">
            <h1>Crear curso</h1>
            <p>Rellene el forumlario para crear un nuevo curso</p>
            <hr />
            <form asp-action="Create" method="post">
                <div>
                    <div asp-validation-summary="All" class="text-danger"></div>
                </div>
                <fieldset>
                    <div class="mb-3">
                        <label for="SchoolYearId" class="form-label">Seleccionar año escolar</label>
                        <select asp-for="SchoolYearId" class="form-select select-schoolyear" aria-label="Seleccionar año escolar" autofocus>
                            @if (Model.SchoolYears?.Count > 0)
                            {
                                foreach (var item in Model.SchoolYears)
                                {
                                    <option value="@item.Id">@item.Name @(item.Current ? "(actual)" : "")</option>
                                }
                            }
                            else
                            {
                                <option value="none">No existen año escolares</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        @{
                            var careerGroups = Model.Careers?.GroupBy(d => d.FacultyId);
                            <label for="CareerId">Carrera</label>
                            <select asp-for="CareerId" class="form-control selected-career" aria-label="select" onchange="CareerSelectChanged()">
                                @foreach (var group in careerGroups)
                                {
                                    <optgroup label="@group.FirstOrDefault()?.Faculty?.Name">
                                        @foreach (var c in group)
                                        {
                                            <option value="@c.Id">@c.Name</option>
                                        }
                                    </optgroup>
                                }
                            </select>
                        }
                    </div>
                    <div class="mb-3">
                        <label asp-for="TeachingModality" class="form-label"></label>
                        <select asp-for="TeachingModality" asp-items="@Html.GetEnumSelectList<TeachingModality>()" class="form-control selected-teachingModality" onchange="BuildDenomination()"></select>
                        <span asp-validation-for="TeachingModality" />
                    </div>
                    <div class="mb-3">
                        <label asp-for="CareerYear" class="form-label"></label>
                        <input asp-for="CareerYear" class="form-control" onchange="BuildDenomination()"></input>
                        <span asp-validation-for="CareerYear" />
                    </div>
                    <div class="mb-3">
                        <label asp-for="Denomination" class="form-label"></label>
                        <input asp-for="Denomination" class="form-control" />
                        <div class="d-flex justify-content-end">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" id="switchAutogenerateDenomination" onclick="AutoGenerateSwitchActivate()">
                                <label class="form-check-label" for="switchAutogenerateDenomination">Autogenerar denominación</label>
                            </div>
                        </div>
                        <span asp-validation-for="Denomination" />
                    </div>
                    <div class="mb-3">
                        <label asp-for="Enrolment" class="form-label"></label>
                        <input asp-for="Enrolment" class="form-control"></input>
                        <span asp-validation-for="Enrolment" />
                    </div>
                    <div class="mb-3">
                        <label asp-for="Curriculum" class="form-label"></label>
                        <div class="mb-3">
                            @{
                                var curriculaGroups = Model.Curricula.GroupBy(d => d.CareerId);
                                <select asp-for="CurriculumId" class="form-control selected-curriculum" aria-label="select" onchange="BuildDenomination()">
                                    @foreach (var group in curriculaGroups)
                                    {
                                        <optgroup label="@group.FirstOrDefault()?.Career?.Name">
                                            @foreach (var c in group)
                                            {
                                                <option id="@c.Id>@c.CareerId" value="@c.Id">@c.Denomination</option>
                                            }
                                        </optgroup>
                                    }
                                </select>
                            }
                        </div>
                        <span asp-validation-for="Curriculum" />
                    </div>
                </fieldset>
                <div class="form-footer mt-3">
                    <a asp-action="Index" class="btn btn-outline-info"><span class="fa fa-arrow-alt-circle-left"></span> Regresar al listado</a>
                    <button type="submit" class="btn btn-primary"><span class="fa fa-plus"></span> Crear</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('.selected-career').select2({
                placeholder: "Seleccione la carrera"
            });
            $('.selected-teachingModality').select2({
                placeholder: "Seleccione la modalidads"
            });
            $('.selected-curriculum').select2({
                placeholder: "Seleccione el curriculum"
            });
            $('.select-schoolyear').select2({
                placeholder: "Seleccione el curriculum"
            });

            var autoGenerateSwitch = document.getElementById("switchAutogenerateDenomination");
            autoGenerateSwitch.checked = false;
            var denomination = document.getElementById("Denomination");
            denomination.readOnly = false;

            GetCurriculumsForCareer();
        });

        function GetAutoGenerateSwitchStatus() {
            var autoGenerateSwitch = document.getElementById("switchAutogenerateDenomination");
            return autoGenerateSwitch.checked;
        }

        function BuildDenomination() {
            if (GetAutoGenerateSwitchStatus()) {
                var mod = document.getElementById("TeachingModality");
                var mods = mod.getElementsByTagName("option");
                var selectedModality = "";
                for (i = 0; i < mods.length; i++) {
                    var option = mods[i];
                    if (option.value == mod.value) {
                        selectedModality = option.innerText;
                    }
                }

                var career = document.getElementById("CareerId");
                var cGroups = career.getElementsByTagName("optgroup");
                var selectedCareerName = "";
                for (i = 0; i < cGroups.length; i++) {
                    var group = cGroups[i];
                    var options = group.getElementsByTagName("option");
                    for (j = 0; j < options.length; j++) {
                        var option = options[j];
                        if (option.value == career.value) {
                            selectedCareerName = option.innerText;
                        }
                    }
                }
                var denomination = document.getElementById("Denomination");
                var splittedCareerName = selectedCareerName.split(" ");
                splittedCareerName = splittedCareerName.map(s => s[0].toUpperCase());
                var careerInitials = splittedCareerName.join("");
                var splittedMod = selectedModality.split(" ");
                splittedMod = splittedMod.map(s => s[0].toUpperCase());
                var modInitials = splittedMod.join("");

                var careerYear = document.getElementById("CareerYear").value;
                denomination.value = careerInitials + "-" + modInitials + "-" + careerYear;
            }
        }

        function AutoGenerateSwitchActivate() {
            console.log("Autogenerate denomination", GetAutoGenerateSwitchStatus());
            var denomination = document.getElementById("Denomination");
            if (GetAutoGenerateSwitchStatus()) {
                BuildDenomination();
                denomination.readOnly = true;
                console.log(denomination.readOnly)
            } else {
                denomination.readOnly = false;
                console.log(denomination.readOnly)
            }
        }

        function CareerSelectChanged() {
            BuildDenomination();
            GetCurriculumsForCareer();
        }

        function GetCurriculumsForCareer() {
            // GetCurriculumOptionsForCareer
            const careerSelect = document.getElementById("CareerId");
            let careerSelected = careerSelect.options[careerSelect.selectedIndex].value;
            careerSelect.disabled = true;
            $.ajax({
                url: `/courses/GetCurriculumOptionsForCareer?careerId=${careerSelected}`,
                type: "GET",
                success: function (data) {
                    const curriculumSelect = document.getElementById("CurriculumId");
                    curriculumSelect.innerHTML = data;
                    careerSelect.disabled = false;
                },
                error: function (xhr, status, error) {
                    careerSelect.disabled = false;
                    console.log(xhr, status, error);
                }
            });
        }
    </script>
}